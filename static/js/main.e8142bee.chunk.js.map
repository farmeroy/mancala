{"version":3,"sources":["components/GameBoard/HomePit.module.css","components/GameBoard/Row.module.css","components/GameBoard/Board.module.css","components/UI/ModalElement.module.css","components/GameBoard/Stone.module.css","components/GameBoard/Pit.module.css","components/Game-Over/GameOverModal.module.css","components/Game-Rules/RulesModal.module.css","components/GameBoard/Header.module.css","components/GameBoard/Stone.js","components/GameBoard/HomePit.js","Store/game-context.js","components/GameBoard/Pit.js","components/GameBoard/Row.js","components/UI/ModalElement.js","components/Game-Over/GameOverModal.js","components/GameBoard/Board.js","Store/GameProvider.js","components/Game-Rules/RulesModal.js","components/GameBoard/Header.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Stone","className","styles","stone","HomePit","props","stonesEl","i","stones","push","borderbox","pit","player","GameContext","React","createContext","homePit1","homePit2","row1","row2","playerTurn","gameOver","moveStone","id","newGame","endGame","total1","total2","Pit","disabled","isValid","onClick","onMove","bind","Row","gameCtx","useContext","moveStoneHandler","pits","map","index","row","classes","reverse","Backdrop","backdrop","Modal","modal","children","ModalElement","ReactDOM","createPortal","document","getElementById","GameOverModal","winner","player1score","player2score","onNewGame","Board","row1total","reduce","prevVal","currVal","row2total","board","field","defaultGameState","gameReducer","state","action","type","enemyRow","homePits","rows","currHomePit1","currHomePit2","GameProvider","useReducer","gameState","dispatchGameAction","gameContext","Provider","value","RulesModal","onCloseModal","rules","Header","useState","showGameRules","setShowGameRules","showGameRulesHandler","prevState","header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode"],"mappings":"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","file":"static/js/main.e8142bee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pit\":\"HomePit_pit__-ysPF\",\"borderbox\":\"HomePit_borderbox__PFZ5I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__30FZR\",\"reverse\":\"Row_reverse__2Dn4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__2cwqB\",\"field\":\"Board_field__1caeZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"ModalElement_backdrop__22Kbz\",\"modal\":\"ModalElement_modal__1escT\",\"slide-down\":\"ModalElement_slide-down__1D3aY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stone\":\"Stone_stone__35L2-\",\"bump\":\"Stone_bump__ld9zz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pit\":\"Pit_pit__2LKnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-over\":\"GameOverModal_game-over__31Wb0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rules\":\"RulesModal_rules__2n1W8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2Blhh\"};","import React from 'react';\nimport styles from './Stone.module.css';\n\nfunction Stone() {\n\n    return(\n        <div className={styles.stone}>\n\n        </div>\n    )\n}\n\nexport default Stone;","import React from \"react\";\nimport styles from \"./HomePit.module.css\";\nimport Stone from \"./Stone.js\";\n\nfunction HomePit(props) {\n   \n    let stonesEl = [];\n    for(let i = props.stones; i > 0; i--) {\n        stonesEl.push(\n            <Stone key={`HomePit-${i}`}/>\n        )\n    };\n  return (\n    <div className={styles.borderbox}>\n    <div key={props.player} className={styles.pit}>\n      {stonesEl}\n    </div>\n\n    </div>\n  );\n}\n\nexport default HomePit;\n","import React from 'react';\n\nconst GameContext = React.createContext({\n\n        homePit1: 0,\n        homePit2: 0,\n        row1: [4, 4, 4, 4, 4, 4],\n        row2: [4, 4, 4, 4, 4, 4],\n        playerTurn: 1,\n        gameOver: false,\n        moveStone: (id) => {},\n        newGame: () => {},\n        endGame: (total1, total2) => {}\n});\n\nexport default GameContext;","import React from 'react';\nimport styles from './Pit.module.css';\nimport Stone from './Stone.js'\n\n\nfunction Pit(props) {\n  let stones = [];\n  for (let i = props.stones; i > 0; i--) {\n    stones.push(<Stone key={`Pit-${i}`} />);\n  }\n\n  \n  return (\n    <button className={styles.pit} disabled={!props.isValid} onClick={props.onMove.bind(null, props.id)}>\n      {stones}\n    </button>\n  );\n}\n\nexport default Pit;","import React, { useContext} from 'react';\nimport GameContext from '../../Store/game-context';\nimport Pit from './Pit';\nimport styles from './Row.module.css';\n\nfunction Row(props) {\n    const gameCtx = useContext(GameContext);\n    const moveStoneHandler = (id)=> {\n      gameCtx.moveStone(id);\n    };\n\n    \n\n    const pits = props.stones.map((pit, index) => (\n     <Pit stones={pit} key={index} id={{row: props.row, pit: index}} isValid={props.playerTurn} onMove={moveStoneHandler}/>\n    ));\n\n    // reverse the row one flex-direction to ensure propper game flow\n    const classes = `${styles.row} ${props.row === 1 ? styles.reverse : ''}`\n    return (\n      <div className={classes} id={props.row} >\n        {pits}\n      </div>\n    );\n}\n\nexport default Row;","import ReactDOM from \"react-dom\";\nimport styles from \"./ModalElement.module.css\";\n\nconst Backdrop = (props) => {\n  return <div onClick={props.onClick} className={styles.backdrop} ></div>;\n};\n\nconst Modal = (props) => {\n  return <div className={styles.modal}>{props.children}</div>;\n};\n\nconst ModalElement = (props) => {\n  return(\n      <>\n      {ReactDOM.createPortal(\n          <Backdrop onClick={props.onClick}></Backdrop>,\n          document.getElementById(\"backdrop-root\")\n      )}\n      {ReactDOM.createPortal(\n          <Modal onClick={props.onClick}>{props.children}</Modal>,\n          document.getElementById(\"modal-root\")\n      )}\n      </>\n  );\n};\n\nexport default ModalElement;\n","import ModalElement from \"../UI/ModalElement\";\nimport styles from \"./GameOverModal.module.css\";\n\nconst GameOverModal = (props) => {\n  const winner =\n    props.player1score > props.player2score\n      ? \"Player 1 is the winner\"\n      : props.player1score < props.player2score\n      ? \"Player 2 is the winner\"\n      : \"It's a tie!\";\n\n  return (\n    <ModalElement onClick={props.onNewGame}>\n      <div >\n        <h2>{winner}</h2>\n        <p>Player 1: {props.player1score}</p>\n        <p>Player 2: {props.player2score}</p>\n      </div>\n      <div className={styles['game-over']}>\n        <button onClick={props.onNewGame}>Play Again</button>\n      </div>\n    </ModalElement>\n  );\n};\n\nexport default GameOverModal;\n","import React, { useContext } from \"react\";\nimport HomePit from \"./HomePit\";\nimport Row from \"./Row\";\nimport styles from \"./Board.module.css\";\nimport GameContext from \"../../Store/game-context\";\nimport GameOverModal from \"../Game-Over/GameOverModal\";\n\nfunction Board() {\n  const gameCtx = useContext(GameContext);\n\n  //find the total value of the stones in each row\n  let row1total = gameCtx.row1.reduce((prevVal, currVal) => {\n    return prevVal + currVal;\n  }, 0);\n  let row2total = gameCtx.row2.reduce((prevVal, currVal) => {\n    return prevVal + currVal;\n  }, 0);\n  // check if the row is empty\n  if (row1total === 0 || row2total === 0)\n    if (!gameCtx.gameOver) {\n      // check if the game is already over. this is to preven infinite loop\n      gameCtx.endGame(row1total, row2total);\n    }\n\n  return (\n    <div className={styles.board}>\n      {gameCtx.gameOver && (\n        <GameOverModal\n          onNewGame={gameCtx.newGame}\n          player1score={gameCtx.homePit1}\n          player2score={gameCtx.homePit2}\n        />\n      )}\n      <div className={styles.field}>\n        <HomePit key={1} stones={gameCtx.homePit1} />\n        <section>\n          <Row\n            stones={gameCtx.row1}\n            row={1}\n            playerTurn={gameCtx.playerTurn === 1}\n          />\n          <Row\n            stones={gameCtx.row2}\n            row={2}\n            playerTurn={gameCtx.playerTurn === 2}\n          />\n        </section>\n        <HomePit key={2} stones={gameCtx.homePit2} />\n      </div>\n    </div>\n  );\n}\n\nexport default Board;\n","import GameContext from \"./game-context\";\nimport { useReducer } from \"react\";\n\nconst defaultGameState = {\n  homePit1: 0,\n  homePit2: 0,\n  row1: [4, 4, 4, 4, 4, 4],\n  row2: [4, 4, 4, 4, 4, 4],\n  playerTurn: 1,\n  gameOver: false\n};\n\n// the gameReducer contains all the game's logic\nconst gameReducer = (state, action) => {\n  if (action.type === \"MOVE\") {\n    let homePits = [state.homePit1, state.homePit2];\n    let rows = [[...state.row1], [...state.row2]];\n    let row = +action.row;\n    let player = +action.row;\n    let enemyRow;\n    // determine the index of the enemy's row\n    player === 1 ? (enemyRow = 1) : (enemyRow = 0);\n    // console.log(player);\n    let pit = action.pit;\n    let stones = rows[row - 1][pit];\n    rows[row - 1][pit] = 0;\n    for (let i = stones; i > 0; i--) {\n      // check if the player can steal from the enemy's rows\n      if (\n        // if i === 1 it is the last stone\n        i === 1 &&\n        player === row &&\n        // if the pit to be played in is empty\n        rows[row - 1][pit + 1] === 0 &&\n        // make sure the enemy's row isn't empty -- 4 - pit because pit hasn't been incremented\n        rows[enemyRow][4 - pit] !== 0\n      ) {\n        // increase the value of pit\n        pit++;\n\n        // the index of the opposite pit will be 5-the current pit's index\n        // add the stones in that pit and the capturing stone to the player's home pit\n        homePits[player - 1] += rows[enemyRow][5 - pit] + 1;\n        // empty the enemy's pit of those stones\n        rows[enemyRow][5 - pit] = 0;\n        // remove the player's stone from the last pit\n        rows[row - 1][pit] = 0;\n        continue;\n      }\n      // check if the stone is still in the current row array\n      if (pit + 1 < 6) {\n        pit++;\n        rows[row - 1][pit]++;\n        continue;\n      } else if (player === row) {\n        //if the stone is the player's stone, put it in her home pit\n        homePits[player - 1]++;\n        // determine which row the remaining stones should move to\n        player === 1 ? (row = 2) : (row = 1);\n        // make sure the next pit increment equals zero\n        pit = -1;\n        // if the player lands their last stone in their homepit\n        if (i === 1) {\n          player = row;\n        }\n        continue;\n      } else if (player !== row) {\n        //if it's not the player's row, skip the home pit and switch rows\n        player === 1 ? (row = 1) : (row = 2);\n        rows[row - 1][0]++;\n        pit = 0;\n        continue;\n      }\n    }\n    return {\n      homePit1: homePits[0],\n      homePit2: homePits[1],\n      row1: [...rows[0]],\n      row2: [...rows[1]],\n      playerTurn: player === 1 ? 2 : 1\n    };\n  }\n  if (action.type === \"NEW_GAME\") {\n\n    return defaultGameState;\n  }\n\n  if(action.type === \"END_GAME\") {\n    const currHomePit1 = +state.homePit1;\n    const currHomePit2 = +state.homePit2;\n    return ({\n      homePit1: currHomePit1 + action.total1,\n      homePit2: currHomePit2 + action.total2,\n      row1: [0,0,0,0,0,0],\n      row2: [0,0,0,0,0,0],\n      //set gameOver to true in order to prevent an infinite loop\n      gameOver: true\n    });\n  }\n\n};\n\nconst GameProvider = (props) => {\n  const [gameState, dispatchGameAction] = useReducer(\n    gameReducer,\n    defaultGameState\n  );\n\n  const moveStoneHandler = (id) => {\n    dispatchGameAction({\n      type: \"MOVE\",\n      row: id.row,\n      pit: id.pit,\n    });\n  };\n\n  const newGameHandler = (total1, total2) => {\n    dispatchGameAction({\n      type: \"NEW_GAME\",\n      total1: total1,\n      total2: total2\n    })\n  };\n\n  const endGameHandler = (total1, total2) => {\n    dispatchGameAction({\n      type: \"END_GAME\",\n      total1: total1,\n      total2: total2\n    })\n\n  }\n\n  const gameContext = {\n    homePit1: gameState.homePit1,\n    homePit2: gameState.homePit2,\n    row1: gameState.row1,\n    row2: gameState.row2,\n    playerTurn: gameState.playerTurn,\n    gameOver: gameState.gameOver,\n    moveStone: moveStoneHandler,\n    newGame: newGameHandler,\n    endGame: endGameHandler\n  };\n  return (\n    <GameContext.Provider value={gameContext}>\n      {props.children}\n    </GameContext.Provider>\n  );\n};\n\nexport default GameProvider;\n","import ModalElement from \"../UI/ModalElement\";\nimport styles from \"./RulesModal.module.css\";\n\nconst RulesModal = (props) => {\n  return (\n    <ModalElement onClick={props.onCloseModal}>\n      <div className={styles.rules}>\n        <h2>How to Play Mancala</h2>\n        \n          <p>\n            Each turn, the current player picks up all of the stones from one of\n            the pits on their side. Moving counter-clockwise, the player\n            deposits one of the stones in each pit until the stones run out.\n          </p>\n          <p>\n            If the last stone you drop is in your own store, take another turn.\n          </p>\n          <p>\n            If the last stone you drop is in an empty hole on your side, you\n            capture that stone and all stones in the hole directly opposite.\n            Place all captured stones in your store.\n          </p>\n\n        <h2>Winning the Game</h2>\n        \n          <p>\n            The game ends when all six spaces on one side of the board are\n            empty. The player who still has pieces on his side of the board when\n            the game ends captures all of those pieces. Count all the pieces in\n            each store. The winner is the player with the most pieces.\n          </p>\n        \n        <button onClick={props.onCloseModal}>Resume Game</button>\n      </div>\n    </ModalElement>\n  );\n};\n\nexport default RulesModal;\n","import React, { useContext, useState } from \"react\";\nimport GameContext from \"../../Store/game-context\";\nimport RulesModal from \"../Game-Rules/RulesModal\";\nimport styles from './Header.module.css';\n\nconst Header = () => {\n  const gameCtx = useContext(GameContext);\n  const [showGameRules, setShowGameRules] = useState(false);\n  const showGameRulesHandler = () => {\n   setShowGameRules(prevState => !prevState)};\n  const newGameHandler = () => {\n    gameCtx.newGame();\n  };\n  return (\n    <header className={styles.header}>\n      {showGameRules && <RulesModal onCloseModal={showGameRulesHandler}/>}\n      <h1>Mancala</h1>\n      <div>\n      <button onClick={newGameHandler}>Start Over</button>\n      <button onClick={showGameRulesHandler}>How to Play</button>\n\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","\nimport Board from './components/GameBoard/Board';\nimport './App.css';\nimport GameProvider from './Store/GameProvider';\nimport Header from './components/GameBoard/Header';\n\nfunction App() {\n\n\n  return (\n    <GameProvider>\n      <Header></Header>\n      <Board />\n    </GameProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}